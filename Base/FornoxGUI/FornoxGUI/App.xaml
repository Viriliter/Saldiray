<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"	xmlns:local="clr-namespace:FornoxGUI"	xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"	xmlns:System="clr-namespace:System;assembly=mscorlib"	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"	mc:Ignorable="d"	x:Class="FornoxGUI.App"	StartupUri="MainWindow.xaml"	ShutdownMode="OnLastWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="IconsDictionary" Source="pack://application:,,,/FornoxGUI;component/Icons.xaml"/>
                <ResourceDictionary x:Name="InstrumentDictionary" Source="pack://application:,,,/FornoxGUI;component/Instruments.xaml"/>
                <ResourceDictionary x:Name="Gamepad" Source="pack://application:,,,/FornoxGUI;component/Gamepad.xaml"/>
                <ResourceDictionary Source="/WPFNotification;component/Assets/NotificationUI.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--Bing Map Credential-->
            <m:ApplicationIdCredentialsProvider x:Key="Map_Credential"></m:ApplicationIdCredentialsProvider>
            <!--Flight Instrument Resources-->
            <Visibility x:Key="IsGridVisible">Visible</Visibility>
            <System:Double x:Key="AirSpeedRotation">0</System:Double>
            <Visibility x:Key="IsArtHorVisible">Visible</Visibility>
            <System:Double x:Key="RotationArtBackground">0</System:Double>
            <System:Double x:Key="TransformArtBackground">0</System:Double>
            <Point x:Key="TransformPointArtBackground">0.5,0.5</Point>
            <!--Battery Level Resource-->
            <System:Double x:Key="BatteryLevel">0</System:Double>
            <!--Settings Resources-->
            <System:String x:Key="PathDirectory">C:\\Users\ASUS\</System:String>
            <System:String x:Key="GroundDeviceStatus">0</System:String>
            <System:String x:Key="GroundDeviceID">0</System:String>
            <System:Int32 x:Key="UGVTelemetry_BaudRate">57600</System:Int32>
            <System:Double x:Key="GroundDelay">0</System:Double>
            <System:Byte x:Key="GroundSystemID">0x00</System:Byte>
            <System:Byte x:Key="UGVSystemID">0x01</System:Byte>
            <System:Int32 x:Key="GroundTelemetry_BaudRate">57600</System:Int32>
            <System:String x:Key="GroundTelemetry_PortName">AUTO</System:String>
            <System:String x:Key="GroundTelemetry_Status">Unknown</System:String>

            <!--DriveCommand-->
            <System:UInt16 x:Key="UGVForward">0</System:UInt16>
            <System:UInt16 x:Key="UGVBackward">0</System:UInt16>
            <System:UInt16 x:Key="UGVRRight">0</System:UInt16>
            <System:UInt16 x:Key="UGVLeft">0</System:UInt16>
            <System:Byte x:Key="UGVStop">0</System:Byte>

            <!--Vehicle State-->
            <System:Boolean x:Key="UGVIsStarted">false</System:Boolean>
            <System:Boolean x:Key="UGVIsPlugHeated">false</System:Boolean>
            <System:Boolean x:Key="UGVIsEngineStarted">false</System:Boolean>
            <System:Boolean x:Key="UGVIsDeadManActivated">false</System:Boolean>
            <System:Boolean x:Key="UGVThrottleInc">false</System:Boolean>
            <System:Boolean x:Key="UGVThrottleDec">false</System:Boolean>

            <!--DriveMode-->
            <System:String x:Key="IsAutoPilotEnabled">Manuel</System:String>

            
            <!--UGV Camera View-->
            <System:Boolean x:Key="CamSwitch" >False</System:Boolean>
            
            <!--UGV ARMWeapon-->
            <System:Byte x:Key="WeaponStatus">0</System:Byte>

            <!--UGV ARMCommand-->
            <System:UInt16 x:Key="WeaponPitch">0</System:UInt16>
            <System:UInt16 x:Key="WeaponYaw">0</System:UInt16>
            <System:UInt16 x:Key="TargetDistance">0</System:UInt16>

            <!--UGV Navigation-->
            <System:Byte x:Key="GPSStatus">0x00</System:Byte>
            <System:Double x:Key="SatalliteCount">0</System:Double>
            <System:Int32 x:Key="WaypointRadius">-1</System:Int32>
            <System:Double x:Key="AddWaypoint">-1</System:Double>
            <System:Double x:Key="DeleteWaypoint">-1</System:Double>

            <!--UGV Transmission-->
            <System:Byte x:Key="IsConnected">0x00</System:Byte>
            <System:Byte x:Key="IsDataAcknowledged">0x01</System:Byte>
            <System:UInt16 x:Key="VehicleBaudrate">0</System:UInt16>

            <!--UGV Incomming States-->
            <System:Boolean x:Key="InStat_IsStarted">False</System:Boolean>
            <System:Boolean x:Key="InStat_IsSparkReady">False</System:Boolean>
            <System:Boolean x:Key="InStat_IsRun">False</System:Boolean>
            <System:Boolean x:Key="InStat_IsOilAlarmed">False</System:Boolean>
            <System:Boolean x:Key="InStat_UGVMode">False</System:Boolean>

            <!--UGV Telemetry-->
            <System:String x:Key="UGVLocation">;;</System:String>
            <m:Location x:Key="UGVPinLocation">
                <m:Location.Latitude>
                    <System:Double>0</System:Double>
                </m:Location.Latitude>
                <m:Location.Longitude>
                    <System:Double>0</System:Double>
                </m:Location.Longitude>
                <m:Location.Altitude>
                    <System:Double>0</System:Double>
                </m:Location.Altitude>
            </m:Location>
            <System:String x:Key="UGVLat">0</System:String>
            <System:String x:Key="UGVLong">0</System:String>
            <System:String x:Key="UGVAlt">0</System:String>
            <System:String x:Key="UGVSpeed">0</System:String>
            <System:Double x:Key="UGVSpeed_Double">0</System:Double>
            <System:String x:Key="UGVHeading">0</System:String>
            <System:String x:Key="UGVAttitude">;;</System:String>
            <System:String x:Key="UGVroll">-1</System:String>
            <System:String x:Key="UGVpitch">-1</System:String>
            <System:String x:Key="UGVyaw">-1</System:String>
            <System:String x:Key="UGVvx">-1</System:String>
            <System:String x:Key="UGVvy">-1</System:String>
            <System:String x:Key="UGVvz">-1</System:String>
            <System:String x:Key="UGVAcceleration">;;</System:String>
            <System:String x:Key="UGVax">-1</System:String>
            <System:String x:Key="UGVay">-1</System:String>
            <System:String x:Key="UGVaz">-1</System:String>
            <System:String x:Key="UGVCompass">;;</System:String>
            <System:String x:Key="UGVmx">-1</System:String>
            <System:String x:Key="UGVmy">-1</System:String>
            <System:String x:Key="UGVmz">-1</System:String>
            <System:Int32 x:Key="AltitudeOffsetHome">-1</System:Int32>
            
            
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
            <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
            <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
            <Style x:Key="ExpanderRightHeaderStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="500"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Opacity="70" x:Name="circle" Margin="0,0,0,0" HorizontalAlignment="Center" Height="50"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="500">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF131313" Offset="0"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FF5B5B5B" Offset="0.99"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Path x:Name="arrow" Opacity="70" Margin="0,0,0,0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center"
                                            SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF767676"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FFE9E9E9" Offset="0.98"/>
                                                    <GradientStop Color="WhiteSmoke" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="5" ScaleY="5"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="arrow" Value="CornflowerBlue"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="500"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Opacity="70" x:Name="circle" Margin="0,0,0,0" HorizontalAlignment="Center" Height="50"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="500">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF131313" Offset="0"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FF5B5B5B" Offset="0.99"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Path x:Name="arrow" Opacity="70" Margin="0,0,0,0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center"
                                            SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF767676"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FFE9E9E9" Offset="0.98"/>
                                                    <GradientStop Color="WhiteSmoke" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="5" ScaleY="5"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="CornflowerBlue"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1366"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Opacity="70" x:Name="circle" Margin="0,0,0,0" HorizontalAlignment="Center" Height="50"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="1366">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF131313" Offset="0"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FF5B5B5B" Offset="0.99"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Path x:Name="arrow" Opacity="70" Margin="0,0,0,0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center"
                                            SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF767676"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FFE9E9E9" Offset="0.98"/>
                                                    <GradientStop Color="WhiteSmoke" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="5" ScaleY="5"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="CornflowerBlue"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1366"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Opacity="70" x:Name="circle" Margin="0,0,0,0" HorizontalAlignment="Center" Height="50"
                                            Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="1366">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF131313" Offset="0"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FF5B5B5B" Offset="0.99"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Path x:Name="arrow" Opacity="70" Margin="0,0,0,0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center"
                                            SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF767676"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                    <GradientStop Color="#FFE9E9E9" Offset="0.98"/>
                                                    <GradientStop Color="WhiteSmoke" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="5" ScaleY="5"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="CornflowerBlue"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
